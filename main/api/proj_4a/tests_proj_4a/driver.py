"""
-*- coding: utf-8 -*-
Implementation of the Driver Code + a some logging for debugging for Encryption Util
Created: April 2023
Owners: Project 4a: Muskaan Manocha, Prem Desai, Yeshaswini Murthy
"""

import sys
import os

# getting the name of the directory
# where the this file is present.
current = os.path.dirname(os.path.realpath(__file__))
 
# Getting the parent directory name
# where the current directory is present.
parent = os.path.dirname(current)
 
# adding the parent directory to
# the sys.path.
sys.path.append(parent)
 
# now we can import the module in the parent
# directory.
from encryption_util import *


util = EncryptionUtil()

def rsaEncryptDecryptString(plaintext = "Hello World!!! 1234"):
    util.generateRSAKeyPair()
    print(len(util.rsa_keypair))
    print("keypair after generation is:")
    print(util.rsa_keypair)
    pubkey = util.publicKeyFromBase64()
    privkey = util.privateKeyFromBase64()
    print("Original text: %s, encrypting using pubkey:" % plaintext)
    print(pubkey)
    print(type(pubkey))
    encrypted = util.rsaEncryptToBase64(plaintext, pubkey)
    print("Encrypted text: %s, decrypting using" % encrypted)
    print(privkey)
    print(type(privkey))
    print(str(type(privkey))=="<class 'rsa.key.PrivateKey'>")
    decrypted = util.rsaDecryptFromBase64(encrypted, privkey)
    print("Decrypted text: %s" % decrypted)
    print(plaintext==decrypted)

def aesEncryptDecryptString(plaintext = "Hello World!!! 1234"):
    key = util.generateAESKeyBase64()
    print("keypair after generation is:")
    print(key)
    print("Original text: %s, encrypting using key:" % plaintext)
    print(key)
    print(type(key))
    encrypted = util.aes_encrypt(plaintext, key)
    print("Decrypting..." + encrypted)
    decrypted = util.aes_decrypt(encrypted, key)
    print("Comparing decrypted text %s with original %s", (decrypted, plaintext))
    print(plaintext == decrypted)

rsaEncryptDecryptString()
aesEncryptDecryptString()


"""
OP:
cd /Users/muskaanmanocha/workspace/682/atPlatform_Python_Client_SDK ; /usr/bin/env /Users/muskaanmanocha/opt/anaconda3/bin/python /Users/muskaanmanocha/.vscode/extensions/ms-python.python-2022.20.2/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 51532 -- /Users/muskaanmanocha/workspace/682/atPlatform_Python_Client_SDK/main/api/proj_4a/tests_proj_4a/driver.py 
Encrypted b'This is a sample plaintext to encrypt using AES CTR mode.' to :x95S/8kZSEbRiJYTAo2sMJIr2JasUGy8zTuIsvj5zqkIyR8DfD/vdeuiEPkzyd82yrgopspmSaoGfRxOIdW1DA== 
True
True
2
keypair after generation is:
(PublicKey(19045186451369732974646348571735841122865676112375097590895479880916490028362419626688099491773217434665867506294453824146574826056051583845108817051992455298505290939530620572592781739592698290833459710894114619271529179347708093128970088483373527125825013274849306768904242659460804572505110104684167491426707673008570836389266643538828625095197348784892309611293489169441866054277018343602547660858891729183111685703713983596549984273662628111478456875401282498751315293725706151468809628206238624168892269124955506234790019429578226032797972162793206268694397304118896694908072591477649401162298636650611613125877, 65537), PrivateKey(19045186451369732974646348571735841122865676112375097590895479880916490028362419626688099491773217434665867506294453824146574826056051583845108817051992455298505290939530620572592781739592698290833459710894114619271529179347708093128970088483373527125825013274849306768904242659460804572505110104684167491426707673008570836389266643538828625095197348784892309611293489169441866054277018343602547660858891729183111685703713983596549984273662628111478456875401282498751315293725706151468809628206238624168892269124955506234790019429578226032797972162793206268694397304118896694908072591477649401162298636650611613125877, 65537, 10755181814321586544877876018736644642831662616827171854662888298102130032648628261649550058600893804369802652058497276830870108676541024430588481607248436312276741652380003164497289350783919980221040693046541374479138424518343478137589193505495433708085260864888121877979553852429076357298802378177180404206637031697666480705236602895329676566324101438078110681309938249269619258266563917738762705242992672945863406340951572431086416112633730539195528979333287988023639512258599028812301670374794217332381596795279072446948398094051276323776931454373438747095278501397970114794281179743826493508655902056479946608153, 3310281431050167717159682023162348251484850099285931886072402177721174332542971268290257744023945949008825997678648672080663928963807670400468766795707630892106855997746577543975397171336058914070292693038435141795006136371410413446929695222979921297152944624206722875843414780455205227665591025877343411710569873280725189704603, 5753343589680155161622209783263359782416765178005572370991889950509249953817474642219438410618466602833164174153948898721577026842338165499904539171819500266071256395771906548101406755917301084113845798334632851522661780000370040557460039304902831379936154174443873670135089955254533098159))
Original text: Hello World!!! 1234, encrypting using pubkey:
PublicKey(19045186451369732974646348571735841122865676112375097590895479880916490028362419626688099491773217434665867506294453824146574826056051583845108817051992455298505290939530620572592781739592698290833459710894114619271529179347708093128970088483373527125825013274849306768904242659460804572505110104684167491426707673008570836389266643538828625095197348784892309611293489169441866054277018343602547660858891729183111685703713983596549984273662628111478456875401282498751315293725706151468809628206238624168892269124955506234790019429578226032797972162793206268694397304118896694908072591477649401162298636650611613125877, 65537)
<class 'rsa.key.PublicKey'>
Encrypted text: fwcTLjvDfjRscamoO+yoJLabqZUXVcVAPNwT7eZZb3fhF4AhdkrQc3Uilj+GhC2KeOvh1aAzmlwSDjCwnh8UoYirtC5JE9YoO492aP2eS0Hi59mO2Qsjs2xi+LTFUM7JOpBy2mTs4jE0/b20mhWhYgoHtFtY6yFX/G5yEKudorOCJFzVNTaj+kYtShjJdCPvPiIykFZ6o3KvfXs4tRU4Y8wzKO+IY3uE8IyFaNHEr+gqAwAXkocnNx60tMiE3xkggRd+/lfHrReKf+MN1RK+RQbrAa4Xu3pfIVSD8ILYw650U5q5daklTc8+u83ZkKpF7nOQE+ckCxXydr3fcamVKA==, decrypting using
PrivateKey(19045186451369732974646348571735841122865676112375097590895479880916490028362419626688099491773217434665867506294453824146574826056051583845108817051992455298505290939530620572592781739592698290833459710894114619271529179347708093128970088483373527125825013274849306768904242659460804572505110104684167491426707673008570836389266643538828625095197348784892309611293489169441866054277018343602547660858891729183111685703713983596549984273662628111478456875401282498751315293725706151468809628206238624168892269124955506234790019429578226032797972162793206268694397304118896694908072591477649401162298636650611613125877, 65537, 10755181814321586544877876018736644642831662616827171854662888298102130032648628261649550058600893804369802652058497276830870108676541024430588481607248436312276741652380003164497289350783919980221040693046541374479138424518343478137589193505495433708085260864888121877979553852429076357298802378177180404206637031697666480705236602895329676566324101438078110681309938249269619258266563917738762705242992672945863406340951572431086416112633730539195528979333287988023639512258599028812301670374794217332381596795279072446948398094051276323776931454373438747095278501397970114794281179743826493508655902056479946608153, 3310281431050167717159682023162348251484850099285931886072402177721174332542971268290257744023945949008825997678648672080663928963807670400468766795707630892106855997746577543975397171336058914070292693038435141795006136371410413446929695222979921297152944624206722875843414780455205227665591025877343411710569873280725189704603, 5753343589680155161622209783263359782416765178005572370991889950509249953817474642219438410618466602833164174153948898721577026842338165499904539171819500266071256395771906548101406755917301084113845798334632851522661780000370040557460039304902831379936154174443873670135089955254533098159)
<class 'rsa.key.PrivateKey'>
True
Decrypted text: Hello World!!! 1234
True
keypair after generation is:
b'K1lvjcCjTenQh5tEdwjaumfBETcIUiHrqOi2hVlyycY='
Original text: Hello World!!! 1234, encrypting using key:
b'K1lvjcCjTenQh5tEdwjaumfBETcIUiHrqOi2hVlyycY='
<class 'bytes'>
Decrypting...RMVJQrWGBspAObgrnIZ0Ga8scGSDSfa2i4LbRy1QEXQ=
Comparing decrypted text %s with original %s ('Hello World!!! 1234', 'Hello World!!! 1234')
True
"""